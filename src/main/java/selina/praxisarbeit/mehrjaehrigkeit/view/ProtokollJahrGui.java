package selina.praxisarbeit.mehrjaehrigkeit.view;

import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import lombok.Getter;

import javax.swing.*;
import java.awt.*;

@Getter
public class ProtokollJahrGui {
    private JPanel protokollJahr1Panel;
    private JLabel protokollJahr1Label;
    private JPanel fragePanel;
    private JPanel aumPanel;
    private JLabel tiereFrageJahr1Label;
    private JLabel anzahlTiereFrageJahr1Label;
    private JLabel aumJahr1TopicLabel;
    private JRadioButton tiereVorhandenJaRadioButton;
    private JRadioButton tiereVorhandenNeinRadioButton;
    private JLabel weideflaecheLabel;
    private JTextField weideflaecheTextField;
    private JCheckBox keineNutzungPflanzenschutzmittelnCheckBox;
    private JLabel gesamteFlaecheLabel;
    private JCheckBox min100QmGruenflaecheCheckBox;
    private JCheckBox getreideCheckBox;
    private JCheckBox bluehpflanzenCheckBox;
    private JCheckBox anderesCheckBox;
    private JPanel antragstellerPanel;
    private JLabel geschlechtDtoFillLabel;
    private JLabel geburtsdatumDtoFillLabel;
    private JLabel vornameDtoFillLabel;
    private JLabel nachnameDtoFillLabel;
    private JLabel personIdDtoFillLabel;
    private JSpinner tieranzahlSpinner;
    private JCheckBox nichtsCheckBox;
    private JButton speichernButton;
    private JButton abbrechenButton;
    private JLabel bearbeitenErstellenLabel;
    private JPanel ueberschriftPanel;
    private JPanel buttonProtokollePanel;
    private JTextField anbauflaecheTextField;
    private JTextField gesamtFlaecheTextField;
    private JLabel standortDtoFillLabel;
    private JCheckBox feldhamsterCheckBox;
    private JLabel beantragungsJahrKeinePflanzenschutzmittelLabel;
    private JLabel beantragungsJahrmin100QmGruenflaecheLabel;
    private JLabel gesamtflaecheVorherigesJahrDtoFillLabel;
    private JRadioButton anbauflaecheVorhandenJaRadioButton;
    private JRadioButton anbauFlaecheVorhandenNeinRadioButton;
    private JLabel anbauflaecheVorhandenFrageLabel;
    private JLabel wasWirdAngebautLabel;
    private JLabel geburtsdatumLabel;
    private JLabel standortLabel;
    private JLabel keineNutzungPflanzenschutzmittelLabel;
    private JLabel min100QmGruenflaecheLabel;
    private JLabel feldhamsterLabel;
    private JLabel beantragungsJahrFeldhamsterLabel;
    private JLabel gesamtflaecheVorherigesJahrLabel;
    private ButtonGroup anbauflaecheVorhandenButtonGroup;
    private ButtonGroup tiereVorhandenButtonGroup;

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        protokollJahr1Panel = new JPanel();
        protokollJahr1Panel.setLayout(new GridLayoutManager(6, 1, new Insets(10, 10, 10, 10), -1, -1));
        ueberschriftPanel = new JPanel();
        ueberschriftPanel.setLayout(new GridLayoutManager(2, 1, new Insets(10, 10, 10, 10), -1, -1));
        protokollJahr1Panel.add(ueberschriftPanel, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        ueberschriftPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.black), null));
        protokollJahr1Label = new JLabel();
        Font protokollJahr1LabelFont = this.$$$getFont$$$(null, Font.BOLD, 18, protokollJahr1Label.getFont());
        if (protokollJahr1LabelFont != null) protokollJahr1Label.setFont(protokollJahr1LabelFont);
        protokollJahr1Label.setText("Protokoll Jahr 1");
        ueberschriftPanel.add(protokollJahr1Label, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        bearbeitenErstellenLabel = new JLabel();
        bearbeitenErstellenLabel.setText("[ProtokollID]");
        ueberschriftPanel.add(bearbeitenErstellenLabel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        fragePanel = new JPanel();
        fragePanel.setLayout(new GridLayoutManager(11, 9, new Insets(10, 10, 10, 10), -1, -1));
        protokollJahr1Panel.add(fragePanel, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        tiereFrageJahr1Label = new JLabel();
        Font tiereFrageJahr1LabelFont = this.$$$getFont$$$(null, Font.PLAIN, -1, tiereFrageJahr1Label.getFont());
        if (tiereFrageJahr1LabelFont != null) tiereFrageJahr1Label.setFont(tiereFrageJahr1LabelFont);
        tiereFrageJahr1Label.setText("Sind Tiere (keine Haustiere) vorhanden?");
        fragePanel.add(tiereFrageJahr1Label, new GridConstraints(1, 0, 1, 5, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        tiereVorhandenJaRadioButton = new JRadioButton();
        tiereVorhandenJaRadioButton.setText("Ja");
        fragePanel.add(tiereVorhandenJaRadioButton, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 1, false));
        anzahlTiereFrageJahr1Label = new JLabel();
        Font anzahlTiereFrageJahr1LabelFont = this.$$$getFont$$$(null, Font.PLAIN, -1, anzahlTiereFrageJahr1Label.getFont());
        if (anzahlTiereFrageJahr1LabelFont != null) anzahlTiereFrageJahr1Label.setFont(anzahlTiereFrageJahr1LabelFont);
        anzahlTiereFrageJahr1Label.setText("wenn ja, wie viele?");
        fragePanel.add(anzahlTiereFrageJahr1Label, new GridConstraints(3, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        weideflaecheLabel = new JLabel();
        Font weideflaecheLabelFont = this.$$$getFont$$$(null, Font.PLAIN, -1, weideflaecheLabel.getFont());
        if (weideflaecheLabelFont != null) weideflaecheLabel.setFont(weideflaecheLabelFont);
        weideflaecheLabel.setText("Weidefläche:");
        fragePanel.add(weideflaecheLabel, new GridConstraints(4, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label1 = new JLabel();
        label1.setText("qm");
        fragePanel.add(label1, new GridConstraints(4, 4, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        weideflaecheTextField = new JTextField();
        fragePanel.add(weideflaecheTextField, new GridConstraints(4, 2, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(100, 30), null, 0, false));
        final JLabel label2 = new JLabel();
        Font label2Font = this.$$$getFont$$$(null, Font.PLAIN, -1, label2.getFont());
        if (label2Font != null) label2.setFont(label2Font);
        label2.setText("<html>Anbaufläche (für Getreide, <br>Blühpflanzen etc.):</html>");
        fragePanel.add(label2, new GridConstraints(9, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        anbauflaecheTextField = new JTextField();
        fragePanel.add(anbauflaecheTextField, new GridConstraints(9, 2, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(100, 30), null, 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("qm");
        fragePanel.add(label3, new GridConstraints(9, 4, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        gesamtFlaecheTextField = new JTextField();
        fragePanel.add(gesamtFlaecheTextField, new GridConstraints(10, 2, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(100, 30), null, 0, false));
        gesamteFlaecheLabel = new JLabel();
        Font gesamteFlaecheLabelFont = this.$$$getFont$$$(null, Font.PLAIN, -1, gesamteFlaecheLabel.getFont());
        if (gesamteFlaecheLabelFont != null) gesamteFlaecheLabel.setFont(gesamteFlaecheLabelFont);
        gesamteFlaecheLabel.setText("Gesamte Fläche:");
        fragePanel.add(gesamteFlaecheLabel, new GridConstraints(10, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setText("qm");
        fragePanel.add(label4, new GridConstraints(10, 4, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        wasWirdAngebautLabel = new JLabel();
        Font wasWirdAngebautLabelFont = this.$$$getFont$$$(null, Font.PLAIN, -1, wasWirdAngebautLabel.getFont());
        if (wasWirdAngebautLabelFont != null) wasWirdAngebautLabel.setFont(wasWirdAngebautLabelFont);
        wasWirdAngebautLabel.setText("Was wird angebaut?");
        fragePanel.add(wasWirdAngebautLabel, new GridConstraints(7, 0, 1, 8, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        getreideCheckBox = new JCheckBox();
        getreideCheckBox.setText("Getreide");
        fragePanel.add(getreideCheckBox, new GridConstraints(8, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 1, false));
        bluehpflanzenCheckBox = new JCheckBox();
        bluehpflanzenCheckBox.setText("Blühpflanzen");
        fragePanel.add(bluehpflanzenCheckBox, new GridConstraints(8, 1, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 1, false));
        tiereVorhandenNeinRadioButton = new JRadioButton();
        tiereVorhandenNeinRadioButton.setText("nein");
        fragePanel.add(tiereVorhandenNeinRadioButton, new GridConstraints(2, 1, 1, 7, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        anderesCheckBox = new JCheckBox();
        anderesCheckBox.setText("Anderes");
        fragePanel.add(anderesCheckBox, new GridConstraints(8, 3, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 1, false));
        final JLabel label5 = new JLabel();
        Font label5Font = this.$$$getFont$$$(null, Font.BOLD, 14, label5.getFont());
        if (label5Font != null) label5.setFont(label5Font);
        label5.setText("Fragen zum Betrieb");
        fragePanel.add(label5, new GridConstraints(0, 0, 1, 8, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        tieranzahlSpinner = new JSpinner();
        fragePanel.add(tieranzahlSpinner, new GridConstraints(3, 2, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        nichtsCheckBox = new JCheckBox();
        nichtsCheckBox.setText("Nichts");
        fragePanel.add(nichtsCheckBox, new GridConstraints(8, 5, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 1, false));
        final Spacer spacer1 = new Spacer();
        fragePanel.add(spacer1, new GridConstraints(8, 6, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final JLabel label6 = new JLabel();
        Font label6Font = this.$$$getFont$$$(null, Font.PLAIN, 11, label6.getFont());
        if (label6Font != null) label6.setFont(label6Font);
        label6.setText("Gesamtfläche des vorherigen Jahres:");
        fragePanel.add(label6, new GridConstraints(10, 5, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        gesamtflaecheVorherigesJahrDtoFillLabel = new JLabel();
        Font gesamtflaecheVorherigesJahrLabelFont = this.$$$getFont$$$(null, Font.PLAIN, 11, gesamtflaecheVorherigesJahrDtoFillLabel.getFont());
        if (gesamtflaecheVorherigesJahrLabelFont != null)
            gesamtflaecheVorherigesJahrDtoFillLabel.setFont(gesamtflaecheVorherigesJahrLabelFont);
        gesamtflaecheVorherigesJahrDtoFillLabel.setText("[QmLetztesJahr]");
        fragePanel.add(gesamtflaecheVorherigesJahrDtoFillLabel, new GridConstraints(10, 7, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        fragePanel.add(spacer2, new GridConstraints(10, 8, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        anbauflaecheVorhandenFrageLabel = new JLabel();
        anbauflaecheVorhandenFrageLabel.setText("Ist Fläche vorhanden, auf der etwas (Getreide, Blühpflanzen, etc) angebaut wird?");
        fragePanel.add(anbauflaecheVorhandenFrageLabel, new GridConstraints(5, 0, 1, 8, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        anbauflaecheVorhandenJaRadioButton = new JRadioButton();
        anbauflaecheVorhandenJaRadioButton.setText("Ja");
        fragePanel.add(anbauflaecheVorhandenJaRadioButton, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 1, false));
        anbauFlaecheVorhandenNeinRadioButton = new JRadioButton();
        anbauFlaecheVorhandenNeinRadioButton.setText("nein");
        fragePanel.add(anbauFlaecheVorhandenNeinRadioButton, new GridConstraints(6, 1, 1, 3, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        aumPanel = new JPanel();
        aumPanel.setLayout(new GridLayoutManager(4, 3, new Insets(10, 10, 10, 10), -1, -1));
        protokollJahr1Panel.add(aumPanel, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        aumJahr1TopicLabel = new JLabel();
        Font aumJahr1TopicLabelFont = this.$$$getFont$$$(null, Font.BOLD, 14, aumJahr1TopicLabel.getFont());
        if (aumJahr1TopicLabelFont != null) aumJahr1TopicLabel.setFont(aumJahr1TopicLabelFont);
        aumJahr1TopicLabel.setText("AUM");
        aumPanel.add(aumJahr1TopicLabel, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        keineNutzungPflanzenschutzmittelnCheckBox = new JCheckBox();
        keineNutzungPflanzenschutzmittelnCheckBox.setText("keine Nutzung von Pflanzenschutzmitteln");
        aumPanel.add(keineNutzungPflanzenschutzmittelnCheckBox, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 1, false));
        min100QmGruenflaecheCheckBox = new JCheckBox();
        min100QmGruenflaecheCheckBox.setText("min. 100 qm Grünfläche");
        aumPanel.add(min100QmGruenflaecheCheckBox, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 1, false));
        beantragungsJahrKeinePflanzenschutzmittelLabel = new JLabel();
        Font beantragungsJahrKeinePflanzenschutzmittelLabelFont = this.$$$getFont$$$(null, Font.PLAIN, 11, beantragungsJahrKeinePflanzenschutzmittelLabel.getFont());
        if (beantragungsJahrKeinePflanzenschutzmittelLabelFont != null)
            beantragungsJahrKeinePflanzenschutzmittelLabel.setFont(beantragungsJahrKeinePflanzenschutzmittelLabelFont);
        beantragungsJahrKeinePflanzenschutzmittelLabel.setText("Beantragt in Jahr");
        aumPanel.add(beantragungsJahrKeinePflanzenschutzmittelLabel, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer3 = new Spacer();
        aumPanel.add(spacer3, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        beantragungsJahrmin100QmGruenflaecheLabel = new JLabel();
        Font beantragungsJahrmin100QmGruenflaecheLabelFont = this.$$$getFont$$$(null, Font.PLAIN, 11, beantragungsJahrmin100QmGruenflaecheLabel.getFont());
        if (beantragungsJahrmin100QmGruenflaecheLabelFont != null)
            beantragungsJahrmin100QmGruenflaecheLabel.setFont(beantragungsJahrmin100QmGruenflaecheLabelFont);
        beantragungsJahrmin100QmGruenflaecheLabel.setText("Beantragt in Jahr");
        aumPanel.add(beantragungsJahrmin100QmGruenflaecheLabel, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        feldhamsterCheckBox = new JCheckBox();
        feldhamsterCheckBox.setText("Feldhamster");
        aumPanel.add(feldhamsterCheckBox, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 1, false));
        antragstellerPanel = new JPanel();
        antragstellerPanel.setLayout(new GridLayoutManager(7, 3, new Insets(10, 10, 10, 10), -1, -1));
        protokollJahr1Panel.add(antragstellerPanel, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        final JLabel label7 = new JLabel();
        label7.setText("ID:");
        antragstellerPanel.add(label7, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        personIdDtoFillLabel = new JLabel();
        Font idLabelFont = this.$$$getFont$$$(null, Font.PLAIN, -1, personIdDtoFillLabel.getFont());
        if (idLabelFont != null) personIdDtoFillLabel.setFont(idLabelFont);
        personIdDtoFillLabel.setText("[AntragstellerID]");
        antragstellerPanel.add(personIdDtoFillLabel, new GridConstraints(1, 1, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label8 = new JLabel();
        label8.setText("Nachname:");
        antragstellerPanel.add(label8, new GridConstraints(2, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        nachnameDtoFillLabel = new JLabel();
        Font nachnameLabelFont = this.$$$getFont$$$(null, Font.PLAIN, -1, nachnameDtoFillLabel.getFont());
        if (nachnameLabelFont != null) nachnameDtoFillLabel.setFont(nachnameLabelFont);
        nachnameDtoFillLabel.setText("[AntragstellerNachname]");
        antragstellerPanel.add(nachnameDtoFillLabel, new GridConstraints(2, 1, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label9 = new JLabel();
        label9.setText("Vorname:");
        antragstellerPanel.add(label9, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        vornameDtoFillLabel = new JLabel();
        Font vornameLabelFont = this.$$$getFont$$$(null, Font.PLAIN, -1, vornameDtoFillLabel.getFont());
        if (vornameLabelFont != null) vornameDtoFillLabel.setFont(vornameLabelFont);
        vornameDtoFillLabel.setText("[AntragstellerVorname]");
        antragstellerPanel.add(vornameDtoFillLabel, new GridConstraints(3, 1, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label10 = new JLabel();
        label10.setText("Geschlecht:");
        antragstellerPanel.add(label10, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        geschlechtDtoFillLabel = new JLabel();
        Font geschlechtLabelFont = this.$$$getFont$$$(null, Font.PLAIN, -1, geschlechtDtoFillLabel.getFont());
        if (geschlechtLabelFont != null) geschlechtDtoFillLabel.setFont(geschlechtLabelFont);
        geschlechtDtoFillLabel.setText("[AntragstellerGeschlecht]");
        antragstellerPanel.add(geschlechtDtoFillLabel, new GridConstraints(4, 1, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label11 = new JLabel();
        Font label11Font = this.$$$getFont$$$(null, Font.BOLD, 14, label11.getFont());
        if (label11Font != null) label11.setFont(label11Font);
        label11.setText("Daten zum Antragsteller");
        antragstellerPanel.add(label11, new GridConstraints(0, 0, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label12 = new JLabel();
        label12.setText("Geburtsdatum:");
        antragstellerPanel.add(label12, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        geburtsdatumDtoFillLabel = new JLabel();
        Font geburtsdatumLabelFont = this.$$$getFont$$$(null, Font.PLAIN, -1, geburtsdatumDtoFillLabel.getFont());
        if (geburtsdatumLabelFont != null) geburtsdatumDtoFillLabel.setFont(geburtsdatumLabelFont);
        geburtsdatumDtoFillLabel.setText("[AntragstellerGeburtsdatum]");
        antragstellerPanel.add(geburtsdatumDtoFillLabel, new GridConstraints(5, 1, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer4 = new Spacer();
        antragstellerPanel.add(spacer4, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final JLabel label13 = new JLabel();
        label13.setText("Standort:");
        antragstellerPanel.add(label13, new GridConstraints(6, 0, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        standortDtoFillLabel = new JLabel();
        standortDtoFillLabel.setText("[AntrastellerStandort]");
        antragstellerPanel.add(standortDtoFillLabel, new GridConstraints(6, 1, 1, 2, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        buttonProtokollePanel = new JPanel();
        buttonProtokollePanel.setLayout(new GridLayoutManager(1, 3, new Insets(10, 10, 10, 10), -1, -1));
        protokollJahr1Panel.add(buttonProtokollePanel, new GridConstraints(5, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, null, null, null, 0, false));
        buttonProtokollePanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.black), null));
        speichernButton = new JButton();
        speichernButton.setText("Speichern");
        buttonProtokollePanel.add(speichernButton, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 3, false));
        abbrechenButton = new JButton();
        abbrechenButton.setText("Abbrechen");
        buttonProtokollePanel.add(abbrechenButton, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_EAST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer5 = new Spacer();
        buttonProtokollePanel.add(spacer5, new GridConstraints(0, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, null, null, null, 0, false));
        final Spacer spacer6 = new Spacer();
        protokollJahr1Panel.add(spacer6, new GridConstraints(4, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        tiereVorhandenButtonGroup = new ButtonGroup();
        tiereVorhandenButtonGroup.add(tiereVorhandenNeinRadioButton);
        tiereVorhandenButtonGroup.add(tiereVorhandenJaRadioButton);
    }

    /**
     * @noinspection ALL
     */
    private Font $$$getFont$$$(String fontName, int style, int size, Font currentFont) {
        if (currentFont == null) return null;
        String resultName;
        if (fontName == null) {
            resultName = currentFont.getName();
        } else {
            Font testFont = new Font(fontName, Font.PLAIN, 10);
            if (testFont.canDisplay('a') && testFont.canDisplay('1')) {
                resultName = fontName;
            } else {
                resultName = currentFont.getName();
            }
        }
        return new Font(resultName, style >= 0 ? style : currentFont.getStyle(), size >= 0 ? size : currentFont.getSize());
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return protokollJahr1Panel;
    }

    private void createUIComponents() {
        // TODO: place custom component creation code here
    }
}
